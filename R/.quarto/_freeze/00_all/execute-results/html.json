{
  "hash": "3209c33657a1ec3e1488ce9a57a88e25",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"00_all\"\nauthor: \"Group 29\"\nformat: html\neditor: visual\n---\n\n\n# All document\n\n---\ntitle: \"01_load\"\nauthor: \"Group 29\"\nformat: html\noutput-dir: \"../results\"\neditor: visual\n---\n\n## Huskeliste (slet mig!)\n\n-   Rækkefølge af facet_wrap() plots\n\n-   Overskrifter i figur_5 plots filerne\n\n-   Output fra alle filer I results (html, png)\n\n-   Continuous variable\n\n-   Function\n\n## Loading relevant libraries\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"tidyverse\")\nlibrary(\"here\")\n```\n:::\n\n## Loading relevant data\n\n::: {.cell}\n\n```{.r .cell-code}\nraw_data <- read_csv(file = \"https://datashare.ed.ac.uk/bitstream/handle/10283/124/IST_corrected.csv?sequence=5&isAllowed=y\")\n```\n:::\n\n## Saving data in a tsv format\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define the file path\nfile_path <- \"../data/_raw/\" \nif (!file.exists(file_path)){dir.create(file_path, recursive = TRUE)}\n\n#Create the directory if it doesn't exist\nif (!file.exists(file_path)) { dir.create(file_path, recursive = TRUE) }\n\n#Write the data to a TSV file\nwrite_tsv(x = raw_data, \n          file = str_c(file_path, \"01_dat_load.tsv\"))\n```\n:::\n\n---\ntitle: \"02_clean\"\nformat: html\noutput:\n  html:\n    output-dir: \"/results\"\neditor: visual\n---\n\n# Data Cleaning\n\n## Loading libraries\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"tidyverse\")\n```\n:::\n\n## Loading data\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read_tsv(\"../data/_raw/01_dat_load.tsv\")\n```\n:::\n\n## Data cleaning\n\n### Ensuring global use of Yes/No for binary variables, and NA if information is unknown (U/u/0)\n\nDuring revision of the data, many faulty characters of U and C appear within columns, only meant for Y or N. The U and C are therefore changed to NA to indicate a missing value.\n\n::: {.cell}\n\n```{.r .cell-code}\n#converting U and C to NA\ndata_clean_properNA <- data |> \n  #Replacing all C with NA to indicate missing value\n  mutate(across(where(is.character), ~ na_if(.,\"C\"))) |> \n  #Replace all U and u with NA in all columns except for RCONSC, where U = unconscious\n  mutate(RCONSC = if_else(RCONSC == \"U\", \"unconscious\", RCONSC)) |> \n  mutate(across(where(is.character), ~na_if(.,\"U\")),\n         across(where(is.character), ~na_if(.,\"u\"))) |> \n  mutate(RCONSC = if_else(RCONSC == \"unconscious\", \"U\", RCONSC))\n```\n:::\n\nIn the variable SET14D, a 0 is indicating that it is not known if the subject is alive or dead at the 14 day checkup. We therefore want to change the 0 to NA, indicating that this information is not known.\n\n::: {.cell}\n\n```{.r .cell-code}\n#converting 0 to NA\ndata_clean_properNA2 <- data_clean_properNA |> \n  mutate(SET14D = if_else(SET14D == 0, NA, SET14D))\n```\n:::\n\nIn column DASP14 and FAP, both n and N along with y and Y both indicating No and Yes respectively. To match the general synthax, all letters are made upper case\n\n::: {.cell}\n\n```{.r .cell-code}\n#making y and n upper case\ndata_clean_propervar <- data_clean_properNA2 |> \n  mutate(across(c(DASP14,FAP), ~str_to_upper(.)))\n```\n:::\n\nIn the columns DVT14, H14,DDEAD, HTI14, ID14, ISC14, NCB14, NK14, PE14, TRAN14, values are 0 = no and 1 = yes, and to match the other binary variables they will therefore be transformed to N = no and Y = yes.\n\n::: {.cell}\n\n```{.r .cell-code}\n#converting 0 to N(No) and 1 to Y(yes)\ndata_clean_propervar2 <- data_clean_propervar |> \n  mutate(across(c(DVT14,H14,DDEAD,HTI14,ID14,ISC14,NCB14,NK14,PE14,TRAN14,STRK14), \n                ~case_when(\n                  . == 0 ~ \"N\",\n                  . == 1 ~ \"Y\")))\n```\n:::\n\n### Ensuring global syntax for numbers 1-8 naming cause of death\n\nThe numbers 1-8 is used for naming cause of death. Therefore OCCODE is renamed to the actual meanings of the numbers 0-9 to prevent confusion to number code in cause of death.\n\n::: {.cell}\n\n```{.r .cell-code}\n#changing values 0-9 for occode to their actual meaning\ndata_clean_properOCcode <- data_clean_propervar2 |> \n  mutate(OCCODE = case_when(\n    OCCODE %in% c(0,8,9) ~ NA,\n    OCCODE == 1 ~ \"dead\",\n    OCCODE == 2 ~ \"dependent\",\n    OCCODE == 3 ~ \"not recovered\",\n    OCCODE == 4 ~ \"recovered\"))\n```\n:::\n\n### Converting all time-values exceeding 59 min and 23 hours to NA\n\nIn the two columns minlocal and hourlocal the local time of the randomization study initiation is annotated. This value is not allowed to be higher than 59 min and 23 hours. All values above this is set to NA for missing values.\n\n::: {.cell}\n\n```{.r .cell-code}\n#replacing all values above 59 in minute and 23 hour with NA\ndata_clean_truetime <- data_clean_properOCcode |> \n  mutate(MINLOCAL = if_else(MINLOCAL > 59, NA, MINLOCAL),\n         HOURLOCAL = if_else(HOURLOCAL > 23, NA, HOURLOCAL))\n```\n:::\n\n### Fixing errors made in the gathering of the data\n\nFor the pilot study, medium dose of heparin is annotated as high dose. The high dose annotation is changed to medium dose annotation, and the two columns for medium dose of pilot study and following study is merged.\n\n::: {.cell}\n\n```{.r .cell-code}\n#replacing all H for M for indicating medium dose (Heparin)\ndata_clean_noH <- data_clean_truetime |> \n  mutate(RXHEP = if_else(RXHEP == \"H\",\"M\",RXHEP))\n\n#merging the Hep high and hep medium column, changing unknown to NA\ndata_clean_correctHepDose <- data_clean_noH |> \n  mutate(across(c(DMH14,DHH14), ~replace_na(.,\"\"))) |> \n  unite(DMH14, c(DMH14,DHH14), sep = \"\") |> \n  mutate(DMH14 = na_if(DMH14,\"\")) |> \n  mutate(across(c(DMH14,DLH14), ~na_if(., \"U\")))\n```\n:::\n\nThe variable STRK14 is annotated as STR14 in the data description, and the column is therefore renamed accordingly\n\n::: {.cell}\n\n```{.r .cell-code}\n#converting name of variable STRK14 to align with the variable description\ndata_clean_annotationalign <- data_clean_correctHepDose |> \n  rename(\"STR14\" = STRK14)\n```\n:::\n\nIn the RDATE variable, all times are annotated as polish months and year. We aim to convert this information in two columns, and reencode the polish to english months\n\n::: {.cell}\n\n```{.r .cell-code}\n#converting polish month names to english month names\ndata_clean_english <- data_clean_annotationalign |> \n  separate_wider_delim(RDATE,delim = \"-\", names = c(\"RMONTH\",\"RYEAR\")) |> \n  mutate(RMONTH = case_when(\n    RMONTH == \"sty\" ~ \"Jan\",\n    RMONTH == \"lut\" ~ \"Feb\",\n    RMONTH == \"mar\" ~ \"Mar\",\n    RMONTH == \"kwi\" ~ \"Apr\",\n    RMONTH == \"maj\" ~ \"May\",\n    RMONTH == \"cze\" ~ \"Jun\",\n    RMONTH == \"lip\" ~ \"Jul\",\n    RMONTH == \"sie\" ~ \"Aug\",\n    RMONTH == \"wrz\" ~ \"Sep\",\n    RMONTH == \"pa\\x9f\" ~ \"Oct\",\n    RMONTH == \"lis\" ~ \"Nov\",\n    RMONTH == \"gru\" ~ \"Dec\"))\n```\n:::\n\n### Removal of irrelevant columns\n\nSome columns is already known to not be relevant. These will therefore be removed to reduce the space of the column.\n\n::: {.cell}\n\n```{.r .cell-code}\n#removing of irrelevant columns\ndata_clean_removecol <- data_clean_english |> \n  #Removing comment columns\n  select(-c(DMAJNCHX,DNOSTRKX,DSIDEX,DDEADX,FDEADX)) |> \n  #Removing columns which are not interesting for our studies\n  select(-c(HOSPNUM,CNTRYNUM,SET14D,NCCODE)) |> \n  #Removing column which have unknown meaning as not included in variable descriptions\n  select(-c(DIED))\n```\n:::\n\n### Merging of columns\n\nThe columns DDEADD and FDEADD are the same, as the value is the date of death of the subject, which is independent of when the checkup is done. The columns are therefore renamed to DEADD (deathdate) and one of the columns are removed.\n\n::: {.cell}\n\n```{.r .cell-code}\n#removing ambigious columns\ndata_clean_mergecol <-  data_clean_removecol |> \n  rename(\"DEADD\" = DDEADD) |> \n  select(-FDEADD)\n```\n:::\n\nThere are four different columns in the data which all represents the final diagnosis of the initial event. It is fair to assume that if one final diagnosis is made of an initial event then another diagnosis is not made, as there are no data entries which has \"Y\" in more than one of the diagnosis. One column, DDIAG, is therefore made to represent the final diagnosis of the initial event.\n\n::: {.cell}\n\n```{.r .cell-code}\n#mergin 4 columns into a new (DDIAG)\ndata_clean_mergecol2 <- data_clean_mergecol |> \n  mutate(\"DDIAG\" = case_when(\n    DDIAGISC == \"Y\" ~ \"DDIAGISC\",\n    DDIAGHA == \"Y\" ~ \"DDIAGHA\",\n    DDIAGUN == \"Y\" ~ \"DDIAGUN\",\n    DNOSTRK == \"Y\" ~ \"DNOSTRK\",\n    TRUE ~ NA))\n```\n:::\n\nThe causes of death at 6 months are split into 8 different columns called DEAD1-8. To have more tidy data, all columns are merged together into one column, using the same 1-8 code for cause of death as DDEADC and FDEADC columns. The new column is called DEADC (death cause)\n\n::: {.cell}\n\n```{.r .cell-code}\n#creating of one column DEADC, which contains all causes of death as 1-8\ndata_clean_properDEADcode <- data_clean_mergecol2 |> \n  mutate(DEAD1 = if_else(DEAD1 == 1, \"1\", \"\"),\n         DEAD2 = if_else(DEAD2 == 1, \"2\", \"\"),\n         DEAD3 = if_else(DEAD3 == 1, \"3\", \"\"),\n         DEAD4 = if_else(DEAD4 == 1, \"4\", \"\"),\n         DEAD5 = if_else(DEAD5 == 1, \"5\", \"\"),\n         DEAD6 = if_else(DEAD6 == 1, \"6\", \"\"),\n         DEAD7 = if_else(DEAD7 == 1, \"7\", \"\"),\n         DEAD8 = if_else(DEAD8 == 1, \"8\", \"\")) |>\n  unite(DEADC, c(DEAD1,DEAD2,DEAD3,DEAD4,DEAD5,DEAD6,DEAD7,DEAD8), sep = \"\") |> \n  mutate(DEADC = na_if(DEADC,\"\"))\n```\n:::\n\n### Splitting/joining data\n\nAdding unique identifier (number) to each patient is done for the purpose of having a key to join the data after splitting. Creating a variable is normally thought of as data augmentation, but it is done in the cleaning for this purpose.\n\nIn order to be able to distinguish patients participating in the trial a Unique Subject Identifier USUBJID is added a variable number one in the cleaned dataset.\n\n::: {.cell}\n\n```{.r .cell-code}\n#adding a unique identifier (number) to each patient\ndata_clean_numbered<- data_clean_properDEADcode |> \n  mutate(USUBJID = row_number()) |> \n  select(USUBJID, everything())\n```\n:::\n\nIt might be relevant to split data into multiple datasets. This is the case if we want to share some data with stakeholders while some variables contain information that is sensitive and need to remove from the dataset (e.g. GDPR reasons).\n\n::: {.cell}\n\n```{.r .cell-code}\n#splitting of dataset into 2\ndata_split_1 <- data_clean_numbered |> \n  select(1:50)\n\ndata_split_2 <- data_clean_numbered |> \n  select(1, 51:96)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#joining dataset by the key which we have created\ndata_inner_joined <- data_split_1 |> \n  inner_join(data_split_2, by = join_by(USUBJID))\n```\n:::\n\nAnother scenario might be that while the external stakeholder is working with their part of the dataset `data_split_2`, patients might have withdrawn from the study and rows have been removed in `data_split_1`. If we want to remove the same patients/observations during the join, `left_join()` will be used.\n\n::: {.cell}\n\n```{.r .cell-code}\n#removing observations\ndata_split_1_1 <- data_split_1 |>\n  slice(-sample(n(), 500))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#combining two datasets, where one has missing observations\ndata_left_joined <- data_split_1_1 |> \n  left_join(data_split_2, by = join_by(USUBJID))\n```\n:::\n\n## Saving final clean data\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_tsv(data_inner_joined, file = \"../data/02_dat_clean.tsv\")\n```\n:::\n\n---\ntitle: \"03_augment\"\nformat: html\neditor: visual\n---\n\n# Data Augmentation\n\n## Loading libraries\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"tidyverse\")\n```\n:::\n\n## Loading clean data\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_clean <- read_tsv(file = \"../data/02_dat_clean.tsv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 19435 Columns: 96\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (67): RCONSC, SEX, RSLEEP, RATRIAL, RCT, RVISINF, RHEP24, RASP3, RDEF1, ...\ndbl (28): USUBJID, RDELAY, AGE, RSBP, RYEAR, HOURLOCAL, MINLOCAL, DAYLOCAL, ...\nlgl  (1): DDEAD\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n## Data augmentation\n\nDLH14 describes if the subject had a low dose of heparin (Yes/No), DMH14 describes if the subject had a medium dose of heparin (Yes/No), given for 14 days or till death/discharge. We want to merge the two columns into one to improve tidyness, Introduce L for low, M for medium, C for control (no Heparin) and NA for no known information or conflicting information in the two columns.\n\n::: {.cell}\n\n```{.r .cell-code}\n#creating groups for heparin doses\ndata_clean_hepgroups <- data_clean |> \n  mutate(\"DH14\" = case_when(\n    (is.na(DLH14) & is.na(DMH14)) ~ NA,\n    (DLH14 == \"Y\" & DMH14 == \"Y\") ~ NA,\n    (DLH14 == \"N\" & DMH14 == \"N\") ~ \"C\",\n    (DLH14 == \"Y\" & DMH14 == \"N\") ~ \"L\",\n    (DLH14 == \"N\" & DMH14 == \"Y\") ~ \"M\"))\n```\n:::\n\nThere are 6 different groups in the data. We therefore want to make a group name column to get an easy overview of the groups in the data\n\n::: {.cell}\n\n```{.r .cell-code}\n#creating groups based on treatment\ndata_clean_trtgroups <- data_clean_hepgroups |> \n  mutate(\"data_group\" = case_when(\n    (RXASP == \"Y\" & RXHEP == \"L\") ~ \"Asp-Hep(low)\",\n    (RXASP == \"Y\" & RXHEP == \"M\") ~ \"Asp-Hep(med)\",\n    (RXASP == \"Y\" & RXHEP == \"N\") ~ \"Asp-Hep(No)\",\n    (RXASP == \"N\" & RXHEP == \"L\") ~ \"Asp(No)-Hep(low)\",\n    (RXASP == \"N\" & RXHEP == \"M\") ~ \"Asp(No)-Hep(med)\",\n    (RXASP == \"N\" & RXHEP == \"N\") ~ \"Asp(No)-Hep(No)\"\n  ))\n```\n:::\n\n## Saving augmented data\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_tsv(data_clean_trtgroups, file = \"../data/03_dat_aug.tsv\")\n```\n:::\n\n## \n\n---\ntitle: \"04_describe\"\nformat: html\neditor: visual\n---\n\n# Descriptive analysis\n\n## Loading libraries\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"tidyverse\")\nlibrary(\"ggplot2\")\nlibrary(\"dplyr\") \nlibrary(\"readr\")\n```\n:::\n\n## Import the dataset\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the dataset  \ndataset <- read_tsv(\"../data/03_dat_aug.tsv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 19435 Columns: 98\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (69): RCONSC, SEX, RSLEEP, RATRIAL, RCT, RVISINF, RHEP24, RASP3, RDEF1, ...\ndbl (28): USUBJID, RDELAY, AGE, RSBP, RYEAR, HOURLOCAL, MINLOCAL, DAYLOCAL, ...\nlgl  (1): DDEAD\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n## Age distribution of study population\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the mean of AGE \nmean_age <- mean(data$AGE, na.rm = TRUE)  # Visualizing age distribution of study population\n\np1<- ggplot(dataset, aes(x = AGE)) +   \n  geom_histogram(fill = \"lightblue\", \n                 color = \"darkblue\",\n                 bins = 30,\n                 alpha=0.7) +   \n  labs(title = \"Age Distribution of the Study Population\",     \n       x = \"Age (years)\",     \n       y = \"Number of People\") +   \n  theme_minimal(base_size = 14) + # Clean minimal theme with larger text   \n  theme(plot.title = element_text(hjust = 0.5, face = \"bold\", size = 18),\n        axis.title.x = element_text(face = \"bold\", size = 14), # Bold x-axis title     \n        axis.title.y = element_text(face = \"bold\", size = 14), # Bold y-axis title\n        panel.grid.minor = element_blank() # Removes minor grid lines \n        ) +   \n  scale_x_continuous(breaks = seq(0, 100, by = 10), \n                     limits = c(0, 100)   ) + # Set x-axis limits and breaks   \n  scale_y_continuous(expand = expansion(mult = c(0, 0.05)),\n                     breaks = seq(0, 3000, by = 500),) + # Avoids crowded y-axis and setting breaks \n  # Adding a short dashed line for the mean age     \n  geom_segment(aes(x = mean_age,\n                   xend = mean_age,       \n                   y = 0, \n                   yend = 2900),\n               color = \"darkgreen\",     \n               linetype = \"dashed\",     \n               size = 1.0   ) + # Adds mean age as a vertical dashed line   \n  annotate(     \"label\",     \n                x = mean(dataset$AGE, na.rm = TRUE) + 12, # Moving label 12 units right of mean to prevent overlap     \n                y = max(table(dataset$AGE)) * 0.8, # Position slightly below the peak     \n                label = paste(\"Mean Age:\", \n                              round(mean(data$AGE, na.rm = TRUE), 1),\"years\"),\n                color = \"white\",\n                fill=\"darkgreen\",\n                fontface=\"bold\",\n                size=5,     \n                label.padding=unit(0.4,\"lines\")) # Mean age shown in a text box with padding\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n```{.r .cell-code}\np1\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in geom_segment(aes(x = mean_age, xend = mean_age, y = 0, yend = 2900), : All aesthetics have length 1, but the data has 19435 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](00_all_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#saving the plot as a png\nggsave(\"../results/03_decription_plot_1.png\", plot = p1, width = 8, height = 4, dpi = 300, bg = \"white\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in geom_segment(aes(x = mean_age, xend = mean_age, y = 0, yend = 2900), : All aesthetics have length 1, but the data has 19435 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\nRemoved 2 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n```\n\n\n:::\n:::\n\n## Age distribution of stroke subtypes (STYPE)\n\nShow stroke subtype STYPE distributed by age using histogram:\n\n-   Describe the different subtypes of strokes\n\n-   Get x-values on all the types...\n\n::: {.cell}\n\n```{.r .cell-code}\n# Faceted histogram by STYPE\nggplot(dataset, aes(x = AGE, fill = STYPE)) +\n  geom_histogram(binwidth = 5, color = \"black\", alpha = 0.7) +\n  scale_x_continuous(breaks = seq(0, 100, by = 25), limits = c(0, 100)) +\n  labs(\n    title = \"Age distribution of stroke subtypes (STYPE)\",\n    x = \"Age (years)\",\n    y = \"Frequency\",\n    fill = \"STYPE\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 18),\n    axis.title.x = element_text(face = \"bold\", size = 14),\n    axis.title.y = element_text(face = \"bold\", size = 14)\n  ) +\n  facet_wrap(~ STYPE, scales = \"free_y\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 10 rows containing missing values or values outside the scale range\n(`geom_bar()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](00_all_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\nOr using boxplots:\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(dataset, aes(x = STYPE, y = AGE, fill = STYPE)) +\n  geom_boxplot(alpha = 0.7, outlier.shape = NA) + # Boxplot without outlier points\n  labs(\n    title = \"Stroke subtypes distributed by age\",\n    x = \"Stroke Type (STYPE)\",\n    y = \"Age (years)\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 18),\n    axis.title.x = element_text(face = \"bold\", size = 14),\n    axis.title.y = element_text(face = \"bold\", size = 14),\n    legend.position = \"right\"\n  )\n```\n\n::: {.cell-output-display}\n![](00_all_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nSTYPE_median <- dataset |> \n  group_by(STYPE) |> \n  summarize(Median_AGE = median(AGE, na.rm = TRUE))\nprint(STYPE_median)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 2\n  STYPE Median_AGE\n  <chr>      <dbl>\n1 LACS          71\n2 OTH           72\n3 PACS          74\n4 POCS          72\n5 TACS          76\n```\n\n\n:::\n:::\n\nThe median age of the different stroke subtypes are shown, where the subtype TACS has the highest median age of 76 years.\n\n-   Effects of treatments\n\n# Data visualization\n\n## Boxplot for predicted probability of death at 6 months compared by gender\n\n::: {.cell}\n\n```{.r .cell-code}\n# Boxplot of predicted probability of death at 6 months distributed by gender \nggplot(dataset, aes(x = SEX, y = EXPDD,fill=SEX)) +\n  geom_boxplot(alpha = 0.7,color=\"black\") + \n  scale_fill_manual(values = c(\"darkred\", \"blue\")) + # Custom fill colors for gender\n  labs(\n    title = \"Predicted probability of death at 6 months\",\n    x = \"Gender\",\n    y = \" EXPD6\",\n    fill = \"Gender\",\n    color = \"Gender\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 18),\n    axis.title.x = element_text(face = \"bold\", size = 14),\n    axis.title.y = element_text(face = \"bold\", size = 14),\n    legend.position = \"top\"\n  ) +\n  scale_y_continuous(\n    limits = c(0, 1), # Adjust the range to display outliers\n    expand = expansion(mult = c(0.05, 0.1)) # Add some space for outliers\n  )\n```\n\n::: {.cell-output-display}\n![](00_all_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Show median EXPDD by gender\n\nmedian_table <- dataset |> \n  group_by(SEX) |> \n  summarize(Median_EXPDD = median(EXPDD, na.rm = TRUE))\nprint(median_table)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  SEX   Median_EXPDD\n  <chr>        <dbl>\n1 F            0.732\n2 M            0.539\n```\n\n\n:::\n:::\n\nFrom the medians of the EXPDD variable, it can be seen by comparing the genders, that females have a higher median of 0.73175 than males (0.53940), thus a relatively higher predicted probability of death at 6 months from randomization.\n\n## Description of Data\n\nFrom the paper - figure 1 and table 1 + 2 + 3 + 4 + 5 + 6\n\nFigure 1 - the group sizes:\n\n![](images/clipboard-2585393746.png)\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(readr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read_tsv(\"../data/03_dat_aug.tsv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 19435 Columns: 98\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (69): RCONSC, SEX, RSLEEP, RATRIAL, RCT, RVISINF, RHEP24, RASP3, RDEF1, ...\ndbl (28): USUBJID, RDELAY, AGE, RSBP, RYEAR, HOURLOCAL, MINLOCAL, DAYLOCAL, ...\nlgl  (1): DDEAD\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |> \n  group_by(data_group) |> \n  count()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n# Groups:   data_group [6]\n  data_group           n\n  <chr>            <int>\n1 Asp(No)-Hep(No)   4860\n2 Asp(No)-Hep(low)  2429\n3 Asp(No)-Hep(med)  2426\n4 Asp-Hep(No)       4858\n5 Asp-Hep(low)      2432\n6 Asp-Hep(med)      2430\n```\n\n\n:::\n:::\n\nTable 1 - characteristics of patients\n\nTable 2 - outcome of the different groups after 14 days\n\nTable 3 - outcome of the different groups after 6 months\n\nTable 4 - outcome of the different groups after 14 days split up into groups with and without atrial fibrillation\n\nTable 5 - outcome of the different groups after 14 days of only heparin split between small and medium dose\n\nTable 6 - Direct comparison of low dose heparin and aspirin absolute outcomes after 14 days compared to the control\n\n---\ntitle: \"05_analysis_1\"\nformat: html\neditor: visual\nproject:\n  output-dir: ../results/\n---\n\n# Data Analysis\n\nWe want to investigate the apperent beneficial effect of the treatment by aspirin and heparin, divided into the different subgroups of the data. We will do that with inspiration from figure 2 in the original paper.\n\nThe CI of the different treatments looking at different subgroups in the data. Pay note that some of the groups are represented by a 95% CI and others has a 99% CI. The 99% CI is used for all the subgroups, while the 95% CI is for the main group. Size of square refer to the amount of available information (the sample size).\n\n## Loading libraries\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"tidyverse\")\nlibrary(\"patchwork\")\n```\n:::\n\n## Loading data\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read_tsv(\"../data/03_dat_aug.tsv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 19435 Columns: 98\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (69): RCONSC, SEX, RSLEEP, RATRIAL, RCT, RVISINF, RHEP24, RASP3, RDEF1, ...\ndbl (28): USUBJID, RDELAY, AGE, RSBP, RYEAR, HOURLOCAL, MINLOCAL, DAYLOCAL, ...\nlgl  (1): DDEAD\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n## Heparin vs. Control Subgroup Analysis\n\n### Data augmentation - Creating the desired subgroups\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_slim_heparin <- data |>\n  mutate(\"Heparin\" = case_when(\n    RXHEP == 'L' ~ 'Y',\n    RXHEP == 'M' ~ 'Y',\n    RXHEP == 'N' ~ 'N',\n    is.na(RXHEP) ~ NA)) |>\n  mutate(\"Outcome\" = case_when(\n    OCCODE == \"dead\" ~ \"dead/dependent\",\n    OCCODE == \"dependent\" ~ \"dead/dependent\",\n    OCCODE == \"not recovered\" ~ \"independent\",\n    OCCODE == \"recovered\" ~ \"independent\",\n    is.na(OCCODE) ~ NA\n  )) |> \n  mutate(\"RDELAY_group\" = case_when(\n    RDELAY <= 8 ~ \"0-8h\",\n    RDELAY <= 12 ~ \"9-12h\",\n    RDELAY <= 24 ~ \"13-24h\",\n    RDELAY <= 48 ~ \"25-48h\",\n    TRUE ~ NA)) |> \n  mutate(\"AGE_group\" = case_when(\n    AGE <= 75 ~ \"≤75\",\n    AGE > 75 ~ \">75\"\n  )) |> \n  mutate(\"RSBP_group\" = case_when(\n    RSBP <= 180 ~ \"≤180\",\n    RSBP > 180 ~ \">180\")) |> \n  mutate(\"EXPDD_group\" = case_when(\n    EXPDD <= 0.4 ~ \"0-40%\",\n    EXPDD <= 0.65 ~ \"40-65%\",\n    EXPDD <= 0.90 ~ \"65-90%\",\n    EXPDD <= 1 ~ \"90-100%\")) |> \n  select(Heparin,Outcome,RXASP,RDELAY_group,SEX,AGE_group,RSLEEP,RCONSC,RATRIAL,RSBP_group,STYPE,RDEF3,RCT,RVISINF,DDIAG,RASP3,RHEP24,EXPDD_group)\n```\n:::\n\n### Data augmentation - Calculating the statistics used in the plot\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_nested_heparin <- data_slim_heparin |> \n  pivot_longer(cols = -c(Heparin,Outcome), names_to = \"group\", values_to = \"subgroup\") |>\n  drop_na() |> \n  group_by(Heparin,Outcome,group,subgroup) |> \n  count() |> \n  mutate(n = n/1000) |> \n  group_by(group,subgroup) |> \n  nest() |> \n  ungroup()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_statistics_heparin <- data_nested_heparin |>\n    mutate(data = map(.x = data, \n                      .f = ~ .x |> \n                        pivot_wider(\n                          names_from = Outcome,\n                          values_from = n))) |> \n  mutate(Total_dead = map_dbl(.x = data,\n                              .f = ~sum(.x |> pull(`dead/dependent`))),\n         Total_patients = map_dbl(.x = data,\n                                  .f = ~sum(.x |> pull(`dead/dependent`))+sum(.x |> pull(independent))),\n         Dead_rate = Total_dead / Total_patients) |> \n  mutate(data = map2(.x = data,\n                     .y = Dead_rate,\n                     .f = ~ .x |>\n                       mutate(Expected_deaths = .y*(`dead/dependent`+independent)))) |>\n  mutate(E = map_dbl(.x = data,\n                     .f = ~ .x |>\n                       select(Heparin,Expected_deaths) |> \n                       pivot_wider(\n                         names_from = Heparin,\n                         values_from = Expected_deaths) |>\n                       mutate(difference = Y - N) |> \n                       pull(difference))) |> \n  mutate(O = map_dbl(.x = data,\n                     .f = ~ .x |> \n                       select(Heparin,`dead/dependent`) |> \n                       pivot_wider(\n                         names_from = Heparin,\n                         values_from = `dead/dependent`) |>\n                       mutate(difference = Y - N) |> \n                       pull(difference))) |> \n  mutate(V = map_dbl(.x = data,\n                     .f = ~ .x |> \n                       mutate(inv_dead = 1/`dead/dependent`,\n                              inv_alive = 1/independent) |> \n                       summarise(total = sum(inv_dead) + sum(inv_alive)) |>\n                       pull(total)))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nk <- 0.207\nalpha <- 0.99\n\ndata_CI_heparin <- data_statistics_heparin |> \n  mutate(Ad_ben = k*(O-E),\n         std_dev = k*sqrt(V),\n         CI_lower = Ad_ben - qnorm(alpha/2)*std_dev,\n         CI_upper = Ad_ben + qnorm(alpha/2)*std_dev) |> \n  unite(group_name, c(group,subgroup))\n```\n:::\n\n### Data Illustration\n\nFirst the group labels are created for the plot\n\n::: {.cell}\n\n```{.r .cell-code}\nfull_labels_heparin <-  c(\n  \"AGE_group_>75\" = \"Age >75\", \n  \"AGE_group_≤75\" = \"Age ≤75\",\n  \"DDIAG_DDIAGHA\" = \"Final diagnosis: Haemorrhagic stroke\",\n  \"DDIAG_DDIAGISC\" = \"Final diagnosis: Ischaemic stroke\",\n  \"DDIAG_DDIAGUN\" = \"Final diagnosis: Indeterminate stroke\",\n  \"DDIAG_DNOSTRK\" = \"Final diagnosis: Not a stroke\",\n  \"EXPDD_group_0-40%\" = \"Predicted probability of death/dependence at 6 month: 0-40%\",\n  \"EXPDD_group_40-65%\" = \"Predicted probability of death/dependence at 6 month: 40-65%\",\n  \"EXPDD_group_65-90%\" = \"Predicted probability of death/dependence at 6 month: 65-90%\",\n  \"EXPDD_group_90-100%\" = \"Predicted probability of death/dependence at 6 month: 90-100%\",\n  \"RASP3_N\" = \"No aspirin within 3 days prior to randomisation\",\n  \"RASP3_Y\" = \"Aspirin within 3 days prior to randomisation\",\n  \"RHEP24_N\" = \"No heparin within 24 hours prior to randomisation\",\n  \"RHEP24_Y\" = \"Heparin within 24 hours prior to randomisation\",\n  \"RATRIAL_N\" = \"No atrial fibrillation\",\n  \"RATRIAL_Y\" = \"Atrial fibrillation\",\n  \"RCONSC_D\" = \"Drowsy state at randomisation\",\n  \"RCONSC_F\" = \"Fully alert at randomisation\",\n  \"RCONSC_U\" = \"Unconcious at randomisation\",\n  \"RCT_N\" = \"No CT before randomisation\",\n  \"RCT_Y\" = \"CT before randomisation\",\n  \"RDEF3_N\" = \"No leg/foot deficit\",\n  \"RDEF3_Y\" = \"Leg/foot deficit\",\n  \"RDELAY_group_0-8h\" = \"0-8 hour delay between stroke and randomisation\",\n  \"RDELAY_group_9-12h\" = \"9-12 hour delay between stroke and randomisation\",\n  \"RDELAY_group_13-24h\" = \"13-24 hour delay between stroke and randomisation\",\n  \"RDELAY_group_25-48h\" = \"25-48 hour delay between stroke and randomisation\",\n  \"RSBP_group_≤180\" = \"Systolic blood pressure under 180mmHg at randomisation\",\n  \"RSBP_group_>180\" = \"Systolic blood pressure over 180mmHg at randomisation\",\n  \"RSLEEP_N\" = \"Symptoms appearing while awake\",\n  \"RSLEEP_Y\" = \"Symptoms appearing while asleep\",\n  \"RVISINF_N\" = \"No infarct visible on CT\",\n  \"RVISINF_Y\" = \"Infarct visible on CT\",\n  \"RXASP_N\" = \"No trial aspirin allocated\",\n  \"RXASP_Y\" = \"Trial aspirin allocated\",\n  \"SEX_F\" = \"Female\",\n  \"SEX_M\" = \"Male\",\n  \"STYPE_LACS\" = \"Stroke subtype: Lacunar syndrome\",\n  \"STYPE_PACS\" = \"Stroke subtype: Partial anterior circulation syndrome\",\n  \"STYPE_POCS\" = \"Stroke subtype: Posterior circulation syndrome\",\n  \"STYPE_TACS\" = \"Stroke subtype: Total anterior circulation syndrome\",\n  \"STYPE_OTH\" = \"Stroke subtype: Other\"\n  )\n\ndata_CI_ordered_heparin <- data_CI_heparin |> \n  mutate(group_name = factor(group_name,\n                             levels = c(\"EXPDD_group_90-100%\",\"EXPDD_group_65-90%\",\"EXPDD_group_40-65%\",\"EXPDD_group_0-40%\",\"DDIAG_DNOSTRK\",\"DDIAG_DDIAGUN\",\"DDIAG_DDIAGISC\",\"DDIAG_DDIAGHA\",\"RDEF3_Y\",\"RDEF3_N\",\"RSLEEP_Y\",\"RSLEEP_N\",\"RCONSC_U\",\"RCONSC_F\",\"RCONSC_D\",\"RDELAY_group_25-48h\",\"RDELAY_group_13-24h\",\"RDELAY_group_9-12h\",\"RDELAY_group_0-8h\",\"STYPE_OTH\",\"STYPE_TACS\",\"STYPE_POCS\",\"STYPE_PACS\",\"STYPE_LACS\",\"RATRIAL_Y\",\"RATRIAL_N\",\"RVISINF_Y\",\"RVISINF_N\",\"RCT_Y\",\"RCT_N\",\"RHEP24_Y\",\"RHEP24_N\",\"RASP3_Y\",\"RASP3_N\",\"RSBP_group_>180\",\"RSBP_group_≤180\",\"RXASP_Y\",\"RXASP_N\",\"SEX_M\",\"SEX_F\",\"AGE_group_≤75\",\"AGE_group_>75\"), ordered = TRUE))\n```\n:::\n\nThe plot is created similarly to the figure 2 in the data\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- data_CI_heparin |> \n  ggplot(aes(x = Ad_ben,\n             y = group_name,\n             xmin = CI_lower,\n             xmax = CI_upper))+\n  geom_point(aes(size = Total_patients),shape = 15)+\n  geom_errorbarh(color = \"blue\")+\n  geom_vline(xintercept = 0, color = \"grey\", linetype = 2)+\n  scale_y_discrete(labels = full_labels_heparin)+\n  scale_size_continuous(range = c(1,3))+\n  labs(title = \"Heparin reduces the risk of death or dependence after 6 months for only a few subgroups\",\n       x = \"Reductions in odds of being dead or dependent at six months for heparin versus no heparin\",\n       size = \"Group size \\n (in 1000 patients)\")+\n  theme_minimal()+\n  theme(axis.title.y = element_blank(),\n        legend.position = \"bottom\")\n\np1\n```\n\n::: {.cell-output-display}\n![](00_all_files/figure-html/unnamed-chunk-48-1.png){width=672}\n:::\n:::\n\n## Aspirin vs. Control Subgroup Analysis\n\n### Data augmentation - Creating the desired subgroups\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_slim_aspirin <- data |>\n  mutate(\"Aspirin\" = RXASP) |> \n  mutate(\"Outcome\" = case_when(\n    OCCODE == \"dead\" ~ \"dead/dependent\",\n    OCCODE == \"dependent\" ~ \"dead/dependent\",\n    OCCODE == \"not recovered\" ~ \"independent\",\n    OCCODE == \"recovered\" ~ \"independent\",\n    is.na(OCCODE) ~ NA\n  )) |> \n  mutate(\"RDELAY_group\" = case_when(\n    RDELAY <= 8 ~ \"0-8h\",\n    RDELAY <= 12 ~ \"9-12h\",\n    RDELAY <= 24 ~ \"13-24h\",\n    RDELAY <= 48 ~ \"25-48h\",\n    TRUE ~ NA)) |> \n  mutate(\"AGE_group\" = case_when(\n    AGE <= 75 ~ \"≤75\",\n    AGE > 75 ~ \">75\"\n  )) |> \n  mutate(\"RSBP_group\" = case_when(\n    RSBP <= 180 ~ \"≤180\",\n    RSBP > 180 ~ \">180\")) |> \n  mutate(\"EXPDD_group\" = case_when(\n    EXPDD <= 0.4 ~ \"0-40%\",\n    EXPDD <= 0.65 ~ \"40-65%\",\n    EXPDD <= 0.90 ~ \"65-90%\",\n    EXPDD <= 1 ~ \"90-100%\")) |> \n  select(Aspirin,Outcome,RXHEP,RDELAY_group,SEX,AGE_group,RSLEEP,RCONSC,RATRIAL,RSBP_group,STYPE,RDEF3,RCT,RVISINF,DDIAG,RASP3,RHEP24,EXPDD_group)\n```\n:::\n\n### Data augmentation - Calculating the statistics used in the plot\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_nested_aspirin <- data_slim_aspirin |> \n  pivot_longer(cols = -c(Aspirin,Outcome), names_to = \"group\", values_to = \"subgroup\") |>\n  drop_na() |> \n  group_by(Aspirin,Outcome,group,subgroup) |> \n  count() |> \n  mutate(n = n/1000) |> \n  group_by(group,subgroup) |> \n  nest() |> \n  ungroup()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_statistics_aspirin <- data_nested_aspirin |>\n    mutate(data = map(.x = data, \n                      .f = ~ .x |> \n                        pivot_wider(\n                          names_from = Outcome,\n                          values_from = n))) |> \n  mutate(Total_dead = map_dbl(.x = data,\n                              .f = ~sum(.x |> pull(`dead/dependent`))),\n         Total_patients = map_dbl(.x = data,\n                                  .f = ~sum(.x |> pull(`dead/dependent`))+sum(.x |> pull(independent))),\n         Dead_rate = Total_dead / Total_patients) |> \n  mutate(data = map2(.x = data,\n                     .y = Dead_rate,\n                     .f = ~ .x |>\n                       mutate(Expected_deaths = .y*(`dead/dependent`+independent)))) |>\n  mutate(E = map_dbl(.x = data,\n                     .f = ~ .x |>\n                       select(Aspirin,Expected_deaths) |> \n                       pivot_wider(\n                         names_from = Aspirin,\n                         values_from = Expected_deaths) |>\n                       mutate(difference = Y - N) |> \n                       pull(difference))) |> \n  mutate(O = map_dbl(.x = data,\n                     .f = ~ .x |> \n                       select(Aspirin,`dead/dependent`) |> \n                       pivot_wider(\n                         names_from = Aspirin,\n                         values_from = `dead/dependent`) |>\n                       mutate(difference = Y - N) |> \n                       pull(difference))) |> \n  mutate(V = map_dbl(.x = data,\n                     .f = ~ .x |> \n                       mutate(inv_dead = 1/`dead/dependent`,\n                              inv_alive = 1/independent) |> \n                       summarise(total = sum(inv_dead) + sum(inv_alive)) |>\n                       pull(total)))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nk <- 0.207\nalpha <- 0.99\n\ndata_CI_aspirin <- data_statistics_aspirin |> \n  mutate(Ad_ben = k*(O-E),\n         std_dev = k*sqrt(V),\n         CI_lower = Ad_ben + qnorm(alpha/2)*std_dev,\n         CI_upper = Ad_ben - qnorm(alpha/2)*std_dev) |> \n  unite(group_name, c(group,subgroup))\n```\n:::\n\n### Data Illustration\n\nFirst the group labels are created for the plot\n\n::: {.cell}\n\n```{.r .cell-code}\nfull_labels_aspirin <-  c(\n  \"AGE_group_>75\" = \"Age >75\", \n  \"AGE_group_≤75\" = \"Age ≤75\",\n  \"DDIAG_DDIAGHA\" = \"Final diagnosis: Haemorrhagic stroke\",\n  \"DDIAG_DDIAGISC\" = \"Final diagnosis: Ischaemic stroke\",\n  \"DDIAG_DDIAGUN\" = \"Final diagnosis: Indeterminate stroke\",\n  \"DDIAG_DNOSTRK\" = \"Final diagnosis: Not a stroke\",\n  \"EXPDD_group_0-40%\" = \"Predicted probability of death/dependence at 6 month: 0-40%\",\n  \"EXPDD_group_40-65%\" = \"Predicted probability of death/dependence at 6 month: 40-65%\",\n  \"EXPDD_group_65-90%\" = \"Predicted probability of death/dependence at 6 month: 65-90%\",\n  \"EXPDD_group_90-100%\" = \"Predicted probability of death/dependence at 6 month: 90-100%\",\n  \"RASP3_N\" = \"No aspirin within 3 days prior to randomisation\",\n  \"RASP3_Y\" = \"Aspirin within 3 days prior to randomisation\",\n  \"RHEP24_N\" = \"No heparin within 24 hours prior to randomisation\",\n  \"RHEP24_Y\" = \"Heparin within 24 hours prior to randomisation\",\n  \"RATRIAL_N\" = \"No atrial fibrillation\",\n  \"RATRIAL_Y\" = \"Atrial fibrillation\",\n  \"RCONSC_D\" = \"Drowsy state at randomisation\",\n  \"RCONSC_F\" = \"Fully alert at randomisation\",\n  \"RCONSC_U\" = \"Unconcious at randomisation\",\n  \"RCT_N\" = \"No CT before randomisation\",\n  \"RCT_Y\" = \"CT before randomisation\",\n  \"RDEF3_N\" = \"No leg/foot deficit\",\n  \"RDEF3_Y\" = \"Leg/foot deficit\",\n  \"RDELAY_group_0-8h\" = \"0-8 hour delay between stroke and randomisation\",\n  \"RDELAY_group_9-12h\" = \"9-12 hour delay between stroke and randomisation\",\n  \"RDELAY_group_13-24h\" = \"13-24 hour delay between stroke and randomisation\",\n  \"RDELAY_group_25-48h\" = \"25-48 hour delay between stroke and randomisation\",\n  \"RSBP_group_≤180\" = \"Systolic blood pressure under 180mmHg at randomisation\",\n  \"RSBP_group_>180\" = \"Systolic blood pressure over 180mmHg at randomisation\",\n  \"RSLEEP_N\" = \"Symptoms appearing while awake\",\n  \"RSLEEP_Y\" = \"Symptoms appearing while asleep\",\n  \"RVISINF_N\" = \"No infarct visible on CT\",\n  \"RVISINF_Y\" = \"Infarct visible on CT\",\n  \"RXHEP_N\" = \"No trial heparin allocated\",\n  \"RXHEP_L\" = \"Trial heparin low dose allocated\",\n  \"RXHEP_M\" = \"Trial heparin medium allocated\",\n  \"SEX_F\" = \"Female\",\n  \"SEX_M\" = \"Male\",\n  \"STYPE_LACS\" = \"Stroke subtype: Lacunar syndrome\",\n  \"STYPE_PACS\" = \"Stroke subtype: Partial anterior circulation syndrome\",\n  \"STYPE_POCS\" = \"Stroke subtype: Posterior circulation syndrome\",\n  \"STYPE_TACS\" = \"Stroke subtype: Total anterior circulation syndrome\",\n  \"STYPE_OTH\" = \"Stroke subtype: Other\")\n\ndata_CI_ordered_aspirin <- data_CI_aspirin |> \n  mutate(group_name = factor(group_name,\n                             levels = c(\"EXPDD_group_90-100%\",\"EXPDD_group_65-90%\",\"EXPDD_group_40-65%\",\"EXPDD_group_0-40%\",\"DDIAG_DNOSTRK\",\"DDIAG_DDIAGUN\",\"DDIAG_DDIAGISC\",\"DDIAG_DDIAGHA\",\"RDEF3_Y\",\"RDEF3_N\",\"RSLEEP_Y\",\"RSLEEP_N\",\"RCONSC_U\",\"RCONSC_F\",\"RCONSC_D\",\"RDELAY_group_25-48h\",\"RDELAY_group_13-24h\",\"RDELAY_group_9-12h\",\"RDELAY_group_0-8h\",\"STYPE_OTH\",\"STYPE_TACS\",\"STYPE_POCS\",\"STYPE_PACS\",\"STYPE_LACS\",\"RATRIAL_Y\",\"RATRIAL_N\",\"RVISINF_Y\",\"RVISINF_N\",\"RCT_Y\",\"RCT_N\",\"RHEP24_Y\",\"RHEP24_N\",\"RASP3_Y\",\"RASP3_N\",\"RSBP_group_>180\",\"RSBP_group_≤180\",\"RXHEP_M\",\"RXHEP_L\",\"RXHEP_N\",\"SEX_M\",\"SEX_F\",\"AGE_group_≤75\",\"AGE_group_>75\"), ordered = TRUE))\n```\n:::\n\nThe plot is created similarly to the figure 2 in the data\n\n::: {.cell}\n\n```{.r .cell-code}\np2 <- data_CI_ordered_aspirin |> \n  ggplot(aes(x = Ad_ben,\n             y = group_name,\n             xmin = CI_lower,\n             xmax = CI_upper))+\n  geom_point(aes(size = Total_patients),shape = 15)+\n  geom_errorbarh(color = \"blue\")+\n  geom_vline(xintercept = 0, color = \"grey\", linetype = 2)+\n  scale_y_discrete(labels = full_labels_aspirin)+\n  scale_size_continuous(range = c(1,3))+\n  labs(title = \"Aspirin reduces the risk of death or dependence after 6 months for many subgroups\",\n       x = \"Reductions in odds of being dead or dependent at six months for aspirin versus no aspirin\",\n       size = \"Group size \\n (in 1000 patients)\")+\n  theme_minimal()+\n  theme(axis.title.y = element_blank(),\n        legend.position = \"bottom\")+\n  annotate(\"text\", x=-0.04, y=\"AGE_group_>75\", label= \"Aspirin better\") + \n  annotate(\"text\", x = 0.04, y=\"AGE_group_>75\", label = \"Aspirin worse\")\n\np2\n```\n\n::: {.cell-output-display}\n![](00_all_files/figure-html/unnamed-chunk-54-1.png){width=672}\n:::\n:::\n\n## Save the results\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(filename = \"../results/05_keyplot_2a.png\", plot = p1)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSaving 7 x 5 in image\n```\n\n\n:::\n\n```{.r .cell-code}\nggsave(filename = \"../results/05_keyplot_2b.png\", plot = p2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSaving 7 x 5 in image\n```\n\n\n:::\n:::\n\n---\ntitle: \"06_analysis_2\"\nformat: html\neditor: visual\n---\n\n## Short-term effects of early anticoagulant therapy\n\nEffects of anticoagulants during the scheduled treatment period (mostly about 14 days) in completed unconfounded randomised trials in acute ischaemic stroke on: (a) recurrent ischaemic stroke, (b) haemorrhagic stroke, (c) death from any cause or non-fatal stroke (non-fatal stroke includes non-fatal recurrent strokes of ischaemic or unknown type and haemorrhagic strokes). The overall results of the 95% CI is represented by diamonds.\n\nIn the report it looks like this:\n\n![](images/clipboard-1936709756.png)\n\n## Loading libraries\n\n::: {.cell}\n\n```{.r .cell-code}\n#| eval: true\nlibrary(\"tidyverse\")\nlibrary(\"ggplot2\")\nlibrary(\"dplyr\")\nlibrary(\"readr\")\n```\n:::\n\n## Import the dataset\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the dataset\ndataset <- read_tsv(\"../data/03_dat_aug.tsv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 19435 Columns: 98\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (69): RCONSC, SEX, RSLEEP, RATRIAL, RCT, RVISINF, RHEP24, RASP3, RDEF1, ...\ndbl (28): USUBJID, RDELAY, AGE, RSBP, RYEAR, HOURLOCAL, MINLOCAL, DAYLOCAL, ...\nlgl  (1): DDEAD\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n## Preparation of subgroups in data\n\n::: {.cell}\n\n```{.r .cell-code}\n# Prepare data\nsummary <- dataset |> \n  group_by(DH14) |>   # Group by subgroups\n  summarize(\n    Events = sum(as.numeric(DEADC), na.rm = TRUE),  # Sum events for each subgroup\n    Total = n(),  # Total population in each subgroup\n    NonEvents = Total - Events  # Calculate non-events\n  ) |> \n  mutate(\n    Odds = Events / NonEvents,  # Calculate odds\n    Reference_Odds = first(Odds),  # Reference odds (assume first group is control)\n    Odds_Ratio = Odds / Reference_Odds,  # Calculate odds ratio\n    Variance = 1 / Events + 1 / NonEvents +\n               1 / first(Events) + 1 / first(NonEvents),  # Variance for confidence intervals\n    CI_Lower = exp(log(Odds_Ratio) - 1.96 * sqrt(Variance)),  # Lower bound of 95% CI\n    CI_Upper = exp(log(Odds_Ratio) + 1.96 * sqrt(Variance)),  # Upper bound of 95% CI\n    Reduction = paste0(round((1 - Odds_Ratio) * 100, 1), \"% ↓\")  # Calculate percentage reduction\n  )\n\n# Display the summary table\nprint(summary)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 11\n  DH14  Events Total NonEvents  Odds Reference_Odds Odds_Ratio Variance CI_Lower\n  <chr>  <dbl> <int>     <dbl> <dbl>          <dbl>      <dbl>    <dbl>    <dbl>\n1 C       7875 10571      2696  2.92           2.92      1     0.000996    0.940\n2 L       3372  4540      1168  2.89           2.92      0.988 0.00165     0.913\n3 M       3328  4281       953  3.49           2.92      1.20  0.00185     1.10 \n4 <NA>      37    43         6  6.17           2.92      2.11  0.194       0.890\n# ℹ 2 more variables: CI_Upper <dbl>, Reduction <chr>\n```\n\n\n:::\n:::\n\n## Recreate figure 3\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create forest plot\nforest_plot <- ggplot(summary, aes(x = Odds_Ratio, y = DH14)) +\n  geom_point(size = 4) +  # Add points for odds ratios\n  geom_errorbarh(aes(xmin = CI_Lower, xmax = CI_Upper), height = 0.2) +  # Add error bars\n  geom_text(aes(label = Reduction), hjust = -0.2, size = 3) +  # Annotate percentage reduction\n  scale_x_log10(limits = c(0.5, 2)) +  # Log scale for odds ratios\n  labs(\n    title = \"Anticoagulant vs Control\",\n    x = \"Anticoagulant Better                 Anticoagulant Worse\",\n    y = \"Subgroup\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_text(size = 10),\n    axis.title.x = element_text(size = 10, face = \"bold\"),\n    plot.title = element_text(hjust = 0.5, size = 12, face = \"bold\")\n  )\n\n# Print the plot\nprint(forest_plot)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_errorbarh()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_text()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](00_all_files/figure-html/unnamed-chunk-59-1.png){width=672}\n:::\n:::\n\n### **Add Supporting Table**\n\nCombine the summary table and the forest plot:\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gridExtra)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'gridExtra'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:dplyr':\n\n    combine\n```\n\n\n:::\n\n```{.r .cell-code}\n# Create a table of summary statistics\ntable <- tableGrob(summary |> \n                     select(DH14, Odds_Ratio, CI_Lower, CI_Upper, Reduction), \n                   rows = NULL)\n\n# Arrange the table and plot side by side\n\ngrid.arrange(forest_plot, table, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_errorbarh()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_text()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](00_all_files/figure-html/unnamed-chunk-60-1.png){width=672}\n:::\n:::\n\n---\ntitle: \"07_analysis_3\"\nauthor: \"Group 29\"\nformat: html\neditor: visual\n---\n\n## Data Analysis\n\n## Long-term effects of early anticoagulant therapy\n\n![](images/clipboard-517319475.png){width=\"256\"}\n\nEffects of anticoagulants at end of scheduled follow-up period (generally 3, or as in the IST, 6 months) in completed unconfounded randomised trials in acute ischaemic stroke on: (a) death from any cause, and (b) death or dependency in activities of daily living\n\n## Loading libraries\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"tidyverse\")\nlibrary(\"ggplot2\")\nlibrary(\"dplyr\")\nlibrary(\"readr\")\n```\n:::\n\n## Loading data\n\n::: {.cell}\n\n```{.r .cell-code}\ndata<- read_tsv(\"../data/03_dat_aug.tsv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 19435 Columns: 98\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (69): RCONSC, SEX, RSLEEP, RATRIAL, RCT, RVISINF, RHEP24, RASP3, RDEF1, ...\ndbl (28): USUBJID, RDELAY, AGE, RSBP, RYEAR, HOURLOCAL, MINLOCAL, DAYLOCAL, ...\nlgl  (1): DDEAD\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n## Preparation of subgroups in data\n\n```         \n```\n\n---\ntitle: \"08_analysis_4\"\nauthor: \"Group 29\"\nformat: html\neditor: visual\n---\n\n## Data analysis\n\n## Effects subdivided by heparin and aspirin\n\nAllocation on:\n\nabsolute risk of symptomatic intracranial haemorrhage;\n\nabsolute risk of transfused or fatal extracranial haemorrhage;\n\nabsolute risk of recurrent ischaemic stroke;\n\nabsolute risk of pulmonary embolism reported (with possibility of substantial under-reporting)\n\nError bars plot one standard error for percentage. For each bar, lower part gives number and percentage of fatal events.\n\n![](images/clipboard-3768980609.png){width=\"557\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(readr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read_tsv(\"../data/03_dat_aug.tsv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 19435 Columns: 98\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (69): RCONSC, SEX, RSLEEP, RATRIAL, RCT, RVISINF, RHEP24, RASP3, RDEF1, ...\ndbl (28): USUBJID, RDELAY, AGE, RSBP, RYEAR, HOURLOCAL, MINLOCAL, DAYLOCAL, ...\nlgl  (1): DDEAD\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |> \n  group_by(data_group) |> \n  count()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n# Groups:   data_group [6]\n  data_group           n\n  <chr>            <int>\n1 Asp(No)-Hep(No)   4860\n2 Asp(No)-Hep(low)  2429\n3 Asp(No)-Hep(med)  2426\n4 Asp-Hep(No)       4858\n5 Asp-Hep(low)      2432\n6 Asp-Hep(med)      2430\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |> \n  group_by(DH14, RXASP) |> \n  count() |> \n  ggplot(aes(x = DH14, y = n, fill = RXASP)) +\n  geom_col(position = position_dodge(preserve = \"single\"))\n```\n\n::: {.cell-output-display}\n![](00_all_files/figure-html/unnamed-chunk-66-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_3 <- data |> \n  select(DH14, RXASP, DRSH) |> \n  mutate(across(DRSH))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_4 <- data_3 |> \n  group_by(DH14, RXASP, DRSH) |> \n  filter(!is.na(DRSH)) |> \n  count()\n\ndata_4\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 14 × 4\n# Groups:   DH14, RXASP, DRSH [14]\n   DH14  RXASP DRSH      n\n   <chr> <chr> <chr> <int>\n 1 C     N     N      5184\n 2 C     N     Y        24\n 3 C     Y     N      5328\n 4 C     Y     Y        33\n 5 L     N     N      2279\n 6 L     N     Y         4\n 7 L     Y     N      2252\n 8 L     Y     Y         4\n 9 M     N     N      2178\n10 M     N     Y        19\n11 M     Y     N      2070\n12 M     Y     Y        13\n13 <NA>  N     N        15\n14 <NA>  Y     N         8\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_5 <- data_4 |> \n  group_by(DH14, RXASP) |> \n  mutate(total_in_group = sum(n),\n         percentage = ifelse(DRSH == \"Y\", n / total_in_group * 100, 0)) |> \n  filter(DRSH != \"N\") |> \n  mutate(DH14 = factor(DH14, levels = c(\"M\", \"L\", \"C\")),\n         RXASP = factor(RXASP, levels = c(\"Y\", \"N\")))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_5 |>   \n  ggplot(aes(x = DH14, y = percentage, fill = RXASP)) +\n  geom_col(position = position_dodge(preserve = \"single\"),\n           alpha = 0.7,\n           color = \"black\") +\n  geom_text(aes(label = round(percentage, 2)),\n            position = position_dodge(width = 0.9),\n            vjust = -0.5,\n            size = 3) +\n  labs(title = \"Percentage of patients with recurrent Haemorrhagic stroke after 14 days\",\n       subtitle = \"These numbers are from second consultation 14 days after randomisation\",\n       x = NULL,\n       y = \"%\",\n       fill = \"Aspirin Dosing\") +\n  scale_fill_brewer(palette = \"Dark2\",\n                    labels = c(\"Y\" = \"300 mg daily\",\n                                 \"N\" = \"No Aspirin\")) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\",\n        axis.title.y = element_text(angle = 0, vjust = 0.5),\n        panel.grid.major.x = element_blank()) +\n  scale_x_discrete(labels = c(\"M\" = \"12500 IU Heparin\",\n                              \"L\" = \"5000 IU Heparin\",\n                              \"C\" = \"No Heparin\"))\n```\n\n::: {.cell-output-display}\n![](00_all_files/figure-html/unnamed-chunk-70-1.png){width=672}\n:::\n:::\n\n\n\n#{{< include 09_analysis_5.qmd >}}\n\n---\ntitle: \"12_analysis_8_Function_Boxplot\"\nauthor: \"Group 29\"\nformat: html\neditor: visual\n---\n\n## Data analysis\n\nCreation of figure 5A: H14\n\nCreation of figure 5B: TRAN14\n\nCreation of figure 5D: PE14\n\n## Loading Libraries\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(readr)\n```\n:::\n\n## Loading Data\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read_tsv(\"../data/03_dat_aug.tsv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 19435 Columns: 98\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (69): RCONSC, SEX, RSLEEP, RATRIAL, RCT, RVISINF, RHEP24, RASP3, RDEF1, ...\ndbl (28): USUBJID, RDELAY, AGE, RSBP, RYEAR, HOURLOCAL, MINLOCAL, DAYLOCAL, ...\nlgl  (1): DDEAD\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n## Creating Function\n\n::: {.cell}\n\n```{.r .cell-code}\nbox_func <- function(event){\n  \n  #Makes it possible to use column name as variable for function\n  column_name <- enquo(event)\n  \n  # Convert column name to a readable string for the title\n  event_name <- as_label(column_name)\n  \n  #Selects only the data of the effect we are investigating\n  relevant_data <- data |> \n    select(RXHEP, RXASP, !!column_name) \n  \n  percentage_data <- relevant_data |>\n    \n  #Counts the patients in each group\n      group_by(RXHEP, RXASP, !!column_name) |> \n      count() |> \n    \n      #Creates the six groups examined\n      group_by(RXHEP, RXASP) |>\n    \n      #Creates a row with percentages for use in plot\n      mutate(total_in_group = sum(n),\n             percentage = n / total_in_group * 100,\n             \n             #Calculating standard deviations\n             p = n / total_in_group,\n             se = sqrt(p * (1 - p) / total_in_group) * 100) |> \n    \n    #Removes all patients with no reported pulmonary embolism\n      filter(!!column_name != \"N\") \n  \n  #Create the order of doses of medicine, so they have the correct order in the plot\n  sorted_data <- percentage_data |> \n    mutate(RXHEP = factor(RXHEP, levels = c(\"M\", \"L\", \"N\")),\n           RXASP = factor(RXASP, levels = c(\"Y\", \"N\")))\n  \n  \n  plot_box <- sorted_data |>   \n  \n    ggplot(aes(#Stratisfy on dose of heparin\n               x = RXHEP,\n               \n               #Expresses the chance of the event happening \n               y = percentage,\n               \n               #Color by the dose of aspirin\n               fill = RXASP,\n               \n               #Defines minimum for error bars\n               ymin = percentage - se,\n               \n               #Defines maximum for error bars\n               ymax = percentage + se)) +\n    \n    #Creates the columns - position_dodge-argument makes \n    geom_col(position = position_dodge(preserve = \"single\"), \n             alpha = 0.7,\n             color = \"black\") +\n    \n    #Creates text for data \n    geom_text(aes(label = round(percentage, 2),\n                  \n    #Makes text centered in boxes and correct sizes\n                  y = percentage / 2),\n              position = position_dodge(width = 0.9),\n              vjust = 0.5,\n              size = 4) +\n    \n    #Adds errorbars\n    geom_errorbar(position = position_dodge(width = 0.9),\n                  width = 0.3) +\n    \n    #\n    labs(title = str_c(\"Percentage of patients with \", event_name),\n         x = NULL,\n         y = \"%\",\n         fill = \"Aspirin Dosing\") +\n    scale_fill_brewer(palette = \"Dark2\",\n                      labels = c(\"Y\" = \"300 mg daily\",\n                                   \"N\" = \"No Aspirin\")) +\n    \n    #Chooses a design\n    theme_minimal() +\n    \n    theme(legend.position = \"bottom\",\n    \n    #Adjust y-axis tet \n          axis.title.y = element_text(angle = 0, vjust = 0.5),\n    \n    #Adjusting horizontal lines\n          panel.grid.major.x = element_blank()) +\n    \n    #Edits labels for the X-axis\n    scale_x_discrete(labels = c(\"M\" = \"12500 IU Heparin\",\n                                \"L\" = \"5000 IU Heparin\",\n                                \"N\" = \"No Heparin\"))\n  \n  #Defines final output of function to be the plot\n  return(plot_box)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbox_func(H14)\n```\n\n::: {.cell-output-display}\n![](00_all_files/figure-html/unnamed-chunk-74-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbox_func(TRAN14)\n```\n\n::: {.cell-output-display}\n![](00_all_files/figure-html/unnamed-chunk-75-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbox_func(PE14)\n```\n\n::: {.cell-output-display}\n![](00_all_files/figure-html/unnamed-chunk-76-1.png){width=672}\n:::\n:::\n\n---\ntitle: \"14_analysis_10\"\nformat: html\neditor: visual\n---\n\n## Libraries\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(broom)\nlibrary(ggrepel)\n```\n:::\n\n## Load Data\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read_tsv(\"../data/03_dat_aug.tsv\", show_col_types = FALSE)\n```\n:::\n\n## Analysis\n\nMaking a simple linear model for prediction of\n\n-   `EXPDD` (Predicted probability of death/dependence at 6 month)\n\n-   `EXPD6` (Predicted probability of death at 6 month)\n\n-   `EXPD14` (Predicted probability of death at 14 days)\n\n### Model 1\n\nUsing `AGE` to see if can be used predict `EXPDD`.\n\n(NOTE: It is not known from the data how\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_1 <- data |> \n  filter(STYPE == \"LACS\") |> \n  lm(data = _, EXPDD ~ AGE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_1 |> \n  summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = EXPDD ~ AGE, data = filter(data, STYPE == \"LACS\"))\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.14339 -0.04199 -0.00584  0.05201  0.43760 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -3.151e-01  6.489e-03  -48.56   <2e-16 ***\nAGE          1.125e-02  9.226e-05  121.93   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.07328 on 4655 degrees of freedom\nMultiple R-squared:  0.7616,\tAdjusted R-squared:  0.7615 \nF-statistic: 1.487e+04 on 1 and 4655 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |> \n  filter(STYPE == \"LACS\") |> \n  ggplot(aes(x = AGE, y = log10(EXPDD))) +\n  geom_point(color = \"PURPLE\")\n```\n\n::: {.cell-output-display}\n![](00_all_files/figure-html/unnamed-chunk-81-1.png){width=672}\n:::\n:::\n\n### Model 2\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_2 <- data |> \n  filter(STYPE == \"LACS\") |> \n  lm(data = _, log2(EXPD6) ~ AGE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_2 |> \n  summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = log2(EXPD6) ~ AGE, data = filter(data, STYPE == \n    \"LACS\"))\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.65386 -0.22350  0.00118  0.20142  0.93091 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -9.0652887  0.0257476  -352.1   <2e-16 ***\nAGE          0.0797957  0.0003661   218.0   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.2908 on 4655 degrees of freedom\nMultiple R-squared:  0.9108,\tAdjusted R-squared:  0.9107 \nF-statistic: 4.751e+04 on 1 and 4655 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |> \n  filter(STYPE == \"LACS\") |> \n  ggplot(aes(x = AGE, y = log2(EXPD6))) +\n  geom_point(color = \"BLUE\")\n```\n\n::: {.cell-output-display}\n![](00_all_files/figure-html/unnamed-chunk-84-1.png){width=672}\n:::\n:::\n\n### Model 3\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_3 <- data |> \n  filter(STYPE == \"LACS\") |> \n  lm(data = _, log2(EXPD14) ~ AGE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_3 |> \n  summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = log2(EXPD14) ~ AGE, data = filter(data, STYPE == \n    \"LACS\"))\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.49220 -0.27692  0.02947  0.20768  0.80010 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -7.6640981  0.0263347 -291.03   <2e-16 ***\nAGE          0.0366654  0.0003744   97.92   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.2974 on 4655 degrees of freedom\nMultiple R-squared:  0.6732,\tAdjusted R-squared:  0.6731 \nF-statistic:  9588 on 1 and 4655 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |> \n  filter(STYPE == \"LACS\") |> \n  ggplot(aes(x = AGE, y = log2(EXPD14))) +\n  geom_point(color = \"RED\")\n```\n\n::: {.cell-output-display}\n![](00_all_files/figure-html/unnamed-chunk-87-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |> \n  select(data_group) |> \n  group_by(data_group) |> \n  count()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n# Groups:   data_group [6]\n  data_group           n\n  <chr>            <int>\n1 Asp(No)-Hep(No)   4860\n2 Asp(No)-Hep(low)  2429\n3 Asp(No)-Hep(med)  2426\n4 Asp-Hep(No)       4858\n5 Asp-Hep(low)      2432\n6 Asp-Hep(med)      2430\n```\n\n\n:::\n:::\n\n",
    "supporting": [
      "00_all_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}