---
title: "08_analysis_4"
author: "Group 29: Helena MÃ¸ller, Emma Christensen, Frederik Holmstrup, Casper Harreby & Laura Christiansen"
format: html
execute: 
  message: FALSE
  warning: FALSE
---

## Data analysis

Examining which effect combinations of treatments affects the probability of side events. The code can be used to create improved versions of figure 5A, 5B and 5D from the report that the data originates from. The effects are illustrated with bar plots.

## Loading Libraries

```{r}
#| eval: true
#| echo: true

library("tidyverse")
library("ggplot2")
library("dplyr")
library("readr")
library("here")
```

## Creating Function

Since several different effects will be examined, the code for creating the barplot is encoded in a function. First, a the data set is changed to contain only the rows investigated: dose op heparin, dose of heparin and whether the effect has been reported. Secondly, a new data set is created, calculating what percentage of patients are experiencing that effect. Thirdly, the plot is created: different heparin doses are on the x-axis, the treatment with aspirin is indicated by coloring and the y-axis is the percentage of patients with the effect reported.

```{r}
bar_func <- function(group_title,data,colvar){

#Removing patients that do not fulfill the requirement for investigation
  relevant_data <- data |> 
    select(RXHEP, RXASP, {{colvar}})

  
#Creating a data set with a column counting the percentage of patients with reported effect
  percentage_data <- relevant_data |>
  #Counts the patients in each group
      group_by_all() |> 
      count() |> 
      #Creates the six groups examined
      group_by(RXHEP, RXASP) |>
      #Creates a row with percentages for use in plot
      mutate(total_in_group = sum(n),
             percentage = n / total_in_group * 100,
             #Calculating standard deviations
             p = n / total_in_group,
             se = sqrt(p * (1 - p) / total_in_group) * 100) |> 
    filter({{colvar}} != "N")

  #Create the order of doses of medicine, so they have the correct order in the plot
  sorted_data <- percentage_data |> 
    mutate(RXHEP = factor(RXHEP, levels = c("M", "L", "N")),
           RXASP = factor(RXASP, levels = c("Y", "N")))

#Defining the plot
  plot_bar <- sorted_data |>   
  
    ggplot(mapping = aes(x = RXHEP, #Stratisfy on dose of heparin
                         y = percentage, #Expresses the chance of the event happening 
                         fill = RXASP, #Color by the dose of aspirin
                         ymin = percentage - se, #Defines minimum for error bars
                         ymax = percentage + se)) + #Defines maximum for error bars
               
    #Creates the columns - position_dodge-argument makes one column for each group
    geom_col(position = position_dodge(preserve = "single"), 
             alpha = 0.7,
             color = "black") +
    
    #Creates text for data 
    geom_text(aes(label = round(percentage, 2),
                  y = percentage / 2),
              
              #Makes text centered in bars and correct sizes
              position = position_dodge(width = 0.9),
              vjust = 0.5,
              size = 4) +
    
    #Adds errorbars
    geom_errorbar(position = position_dodge(width = 0.9),
                  width = 0.3) +
    
    #Create labels 
    labs(title = str_c("Percentage of patients with ", group_title),
         x = NULL,
         y = "%",
         fill = "Aspirin Dosing") +
    scale_fill_brewer(palette = "Dark2",
                      labels = c("Y" = "300 mg daily",
                                   "N" = "No Aspirin")) +
    
    
    theme_minimal() + #Chooses a design (removes grey background)
    theme(legend.position = "bottom",
          axis.title.y = element_text(angle = 0, vjust = 0.5), #Adjust y-axis tet
          panel.grid.major.x = element_blank()) +     #Adjusting horizontal lines
    
    #Edits labels for the X-axis
    scale_x_discrete(labels = c("M" = "12500 IU Heparin",
                                "L" = "5000 IU Heparin",
                                "N" = "No Heparin"))
  
  #Defines final output of function to be the plot
  return(plot_bar)
}
```

## Loading Data

```{r}
#| eval: true
data <- read_tsv(here("data/03_dat_aug.tsv"))
```

## Creating bar plots

In the code below, a plot illustrating the percentage of patients in each group with cerebral bleed/heamorrhagic stroke within 14 days.

```{r}
p1 <- bar_func("cerebral bleed/heamorrhagic stroke within 14 days",data,H14)

p1
```

Here, the plot illustrates the percentage of patients in each group with major non-cerebral bleed within 14 days.

```{r}
p2 <- bar_func("indicator of major non-cerebral bleed within 14 days",data,TRAN14)

p2
```

Finally, a plot illustrating the percentage of patients with reported pulmonary embolism within 14 days are created. This effect has a possibility of substantial under-reporting.

```{r}
p3 <- bar_func("indicator of pulmonary embolism within 14 days",data,PE14)

p3
```

## Save the results

```{r}
ggsave(filename = here("results/08_keyplot_4a.png"), plot = p1, width = 8, height = 4, dpi = 300, bg = "white")  
ggsave(filename = here("results/08_keyplot_4b.png"), plot = p2, width = 8, height = 4, dpi = 300, bg = "white")
ggsave(filename = here("results/08_keyplot_4c.png"), plot = p3, width = 8, height = 4, dpi = 300, bg = "white")
```
