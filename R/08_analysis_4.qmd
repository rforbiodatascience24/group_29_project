---
title: "08_analysis_4"
author: "Group 29: Helena MÃ¸ller, Emma Christensen, Frederik Holmstrup, Casper Harreby & Laura Christiansen"
format: html
---

## Data analysis

Creation of figure 5A: H14

Creation of figure 5B: TRAN14

Creation of figure 5D: PE14

## Loading Libraries

```{r}
#| eval: true
library("tidyverse")
library("ggplot2")
library("dplyr")
library("readr")
library("here")
```

## Creating Function

```{r}
box_func <- function(group_title,data,colvar){

  #Select only the data of the effect we are investigating
  relevant_data <- data |> 
    select(RXHEP, RXASP, {{colvar}})
    #Removes all patients which does not fulfill the requirement we want to investigate
    
  
  percentage_data <- relevant_data |>
  #Counts the patients in each group
      group_by_all() |> 
      count() |> 
      #Creates the six groups examined
      group_by(RXHEP, RXASP) |>
      #Creates a row with percentages for use in plot
      mutate(total_in_group = sum(n),
             percentage = n / total_in_group * 100,
             #Calculating standard deviations
             p = n / total_in_group,
             se = sqrt(p * (1 - p) / total_in_group) * 100) |> 
    filter({{colvar}} != "N")

  #Create the order of doses of medicine, so they have the correct order in the plot
  sorted_data <- percentage_data |> 
    mutate(RXHEP = factor(RXHEP, levels = c("M", "L", "N")),
           RXASP = factor(RXASP, levels = c("Y", "N")))
  
  plot_box <- sorted_data |>   
  
    ggplot(mapping = aes(x = RXHEP, #Stratisfy on dose of heparin
                         y = percentage, #Expresses the chance of the event happening 
                         fill = RXASP, #Color by the dose of aspirin
                         ymin = percentage - se, #Defines minimum for error bars
                         ymax = percentage + se)) + #Defines maximum for error bars
               
    #Creates the columns - position_dodge-argument makes one column for each group
    geom_col(position = position_dodge(preserve = "single"), 
             alpha = 0.7,
             color = "black") +
    
    #Creates text for data 
    geom_text(aes(label = round(percentage, 2),
                  y = percentage / 2),
              
              #Makes text centered in boxes and correct sizes
              position = position_dodge(width = 0.9),
              vjust = 0.5,
              size = 4) +
    
    #Adds errorbars
    geom_errorbar(position = position_dodge(width = 0.9),
                  width = 0.3) +
    
    #Create labels for each patient
    labs(title = str_c("Percentage of patients with ", group_title),
         x = NULL,
         y = "%",
         fill = "Aspirin Dosing") +
    scale_fill_brewer(palette = "Dark2",
                      labels = c("Y" = "300 mg daily",
                                   "N" = "No Aspirin")) +
    
    
    theme_minimal() + #Chooses a design (remove grey background)
    theme(legend.position = "bottom",
          axis.title.y = element_text(angle = 0, vjust = 0.5), #Adjust y-axis tet
          panel.grid.major.x = element_blank()) +     #Adjusting horizontal lines
    
    #Edits labels for the X-axis
    scale_x_discrete(labels = c("M" = "12500 IU Heparin",
                                "L" = "5000 IU Heparin",
                                "N" = "No Heparin"))
  
  #Defines final output of function to be the plot
  return(plot_box)
}
```

## Loading Data

```{r}
#| eval: true
data <- read_tsv(here("data/03_dat_aug.tsv"))
```

## Creating bar plots

```{r}
p1 <- box_func("cerebral bleed/heamorrhagic stroke within 14 days",data,H14)
```

```{r}
p2 <- box_func("indicator of major non-cerebral bleed within 14 days",data,TRAN14)
```

```{r}
p3 <- box_func("indicator of pulmonary embolism within 14 days",data,PE14)
```

## Save the results

```{r}
ggsave(filename = here("results/08_keyplot_a.png"), plot = p1)  
ggsave(filename = here("results/08_keyplot_b.png"), plot = p2)
ggsave(filename = here("results/08_keyplot_c.png"), plot = p3)
```
