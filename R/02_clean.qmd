---
title: "02_clean"
format: html
editor: visual
---

# Data Cleaning

## Loading libraries

```{r}
#| eval: true
library("tidyverse")
```

## Loading data

```{r}
#| eval: true
data <- read_tsv("../data/_raw/01_dat_load.tsv")
```

## Data cleaning

### Changing faulty characters to NA

During revision of the data, many faulty characters of U and C appear within columns, only meant for Y or N. The U and C are therefore changed to NA to indicate a missing value.

```{r}

data_clean <- data |> 
  #Replacing all C with NA to indicate missing value
  mutate(across(where(is.character), ~ na_if(.,"C"))) |> 
  #Replace all U and u with NA in all columns except for RCONSC, where U = unconscious
  mutate(RCONSC = if_else(RCONSC == "U", "unconscious", RCONSC)) |> 
  mutate(across(where(is.character), ~na_if(.,"U")),
         across(where(is.character), ~na_if(.,"u"))) |> 
  mutate(RCONSC = if_else(RCONSC == "unconscious", "U", RCONSC))
```

In column DASP14 and FAP, both n and N along with y and Y both indicating No and Yes respectively. To match the general synthax, all letters are made upper case

```{r}

#Making y and n upper case
data_clean_high <- data_clean |> 
  mutate(across(c(DASP14,FAP), ~str_to_upper(.)))
```

In the two columns minlocal and hourlocal the local time of the randomization study initiation is annotated. This value is not allowed to be higher than 59 min and 23 hours. All values above this is set to NA for missing values.

```{r}

#Replacing all values above 59 in minute and hour with NA
data_clean_truetime <- data_clean_high |> 
  mutate(MINLOCAL = if_else(MINLOCAL > 59, NA, MINLOCAL),
         HOURLOCAL = if_else(HOURLOCAL > 23, NA, HOURLOCAL))
```

For the pilot study, medium dose of heparin is annotated as high dose. The high dose annotation is changed to medium dose annotation, and the two columns for medium dose of pilot study and following study is merged.

```{r}

<<<<<<< HEAD
#Replacing all H for M for indicating medium dose (Heparin)
data_clean_noH <- data_clean_truetime |> 
  mutate(RXHEP = if_else(RXHEP == "H","M",RXHEP))

#Merging the Hep high and hep medium column, changing unknown to NA
data_clean_correctHepDose <- data_clean_noH |> 
=======
#Merging the Hep high and Hep medium column, changing unknown to NA
data_clean_correctHepDose <- data_clean_truetime |> 
>>>>>>> 19ba95cda526ba33747e86b86cb8222bf993daf2
  mutate(across(c(DMH14,DHH14), ~replace_na(.,""))) |> 
  unite(DMH14, c(DMH14,DHH14), sep = "") |> 
  mutate(DMH14 = na_if(DMH14,"")) |> 
  mutate(across(c(DMH14,DLH14), ~na_if(., "U")))
```

To align the synthax across the columns, the columns DVT14, H14,DDEAD, HTI14, ID14, ISC14, NCB14, NK14, PE14, TRAN14, which have values 0 = no and 1 = yes, will therefore be transformed to N = no and Y = yes.

```{r}

data_clean_annotationalign <- data_clean_correctHepDose |> 
  mutate(across(c(DVT14,H14,DDEAD,HTI14,ID14,ISC14,NCB14,NK14,PE14,TRAN14,STRK14), 
                ~case_when(
                  . == 0 ~ "N",
                  . == 1 ~ "Y")))
```

The variable STRK14 is annotated as STR14 in the data description, and the column is therefore renamed accordingly

```{r}
<<<<<<< HEAD

data_clean_annotationalign <- data_clean_annotationalign |> 
  rename("STR14" = STRK14)
=======
data_clean_properOCcode <- data_clean_properOCcode |> 
  mutate(DEAD = case_when(
    OCCODE == 0 ~ NA,
    OCCODE == 1 ~ "dead",
    OCCODE == 2 ~ "dependent",  
    OCCODE == 3 ~ "not recovered",
    OCCODE == 4 ~ "recovered",
    OCCODE == 8 ~ NA,
    OCCODE == 9 ~ NA))
>>>>>>> 19ba95cda526ba33747e86b86cb8222bf993daf2
```

In the variable SET14D, a 0 is indicating that it is not known if the subject is alive or dead at the 14 day checkup. We therefore want to change the 0 to NA, indicating that this information is not known.

```{r}

data_clean_NAintro <- data_clean_annotationalign |> 
  mutate(SET14D = if_else(SET14D == 0, NA, SET14D))
```

In the RDATE variable, all times are annotated as polish months and year. We aim to convert this information in two columns, and reencode the polish to english months

```{r}
data_clean_english <- data_clean_NAintro |> 
  separate_wider_delim(RDATE,delim = "-", names = c("RMONTH","RYEAR")) |> 
  mutate(RMONTH = case_when(
    RMONTH == "sty" ~ "Jan",
    RMONTH == "lut" ~ "Feb",
    RMONTH == "mar" ~ "Mar",
    RMONTH == "kwi" ~ "Apr",
    RMONTH == "maj" ~ "May",
    RMONTH == "cze" ~ "Jun",
    RMONTH == "lip" ~ "Jul",
    RMONTH == "sie" ~ "Aug",
    RMONTH == "wrz" ~ "Sep",
    RMONTH == "pa\x9f" ~ "Oct",
    RMONTH == "lis" ~ "Nov",
    RMONTH == "gru" ~ "Dec"))
```

<<<<<<< HEAD
## Saving final clean data

```{r}
write_tsv(data_clean_english, file = "../data/02_dat_clean.tsv")
=======
#Combining DEAD1-DEAD8 into DEADC - DEADC does not contain updates after 6 months
data_clean_properDEADcode <- data_clean_properOCcode |> 
  mutate(DEAD1 = if_else(DEAD1 == 1, "1", ""),
         DEAD2 = if_else(DEAD2 == 1, "2", ""),
         DEAD3 = if_else(DEAD3 == 1, "3", ""),
         DEAD4 = if_else(DEAD4 == 1, "4", ""),
         DEAD5 = if_else(DEAD5 == 1, "5", ""),
         DEAD6 = if_else(DEAD6 == 1, "6", ""),
         DEAD7 = if_else(DEAD7 == 1, "7", ""),
         DEAD8 = if_else(DEAD8 == 1, "8", "")) |>
  unite(DEADC, c(DEAD1,DEAD2,DEAD3,DEAD4,DEAD5,DEAD6,DEAD7,DEAD8), sep = "") |> 
  mutate(DEADC = na_if(DEADC,""))
>>>>>>> 19ba95cda526ba33747e86b86cb8222bf993daf2
```
